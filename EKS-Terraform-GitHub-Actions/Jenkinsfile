pipeline {
    agent any

    parameters {
        string(name: 'Environment', defaultValue: 'dev')
        choice(name: 'Terraform_Action', choices: ['plan', 'apply', 'destroy'])
    }

    stages {
        stage('Terraform Init, Validate & Action') {
            steps {
                withAWS(credentials: 'aws-creds', region: 'us-east-1') {
                    git branch: 'main', url: 'https://github.com/iam-srihari/EKS-Terraform-GitHub-Actions.git'
                    dir('eks') {
                        script {
                            echo "📁 Current directory: ${pwd()}"
                            sh 'ls -l'
                            sh 'cat backend.tf || echo "No backend.tf found!"'
                            sh 'echo 🔁 Running terraform init...'
                            sh 'terraform init -reconfigure'

                            sh 'echo ✅ Validating Terraform...'
                            sh 'terraform validate'

                            echo "🚀 Running Terraform Action: ${params.Terraform_Action}"

                            if (params.Terraform_Action == 'plan') {
                                sh "terraform plan -var-file=${params.Environment}.tfvars"
                            } else if (params.Terraform_Action == 'apply') {
                                sh "terraform apply -var-file=${params.Environment}.tfvars -auto-approve"
                            } else if (params.Terraform_Action == 'destroy') {
                                sh "terraform destroy -var-file=${params.Environment}.tfvars -auto-approve"
                            } else {
                                error "❌ Invalid Terraform_Action: ${params.Terraform_Action}"
                            }
                        }
                    }
                }
            }
        }
    }
}